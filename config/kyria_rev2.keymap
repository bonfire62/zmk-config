/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/rgb.h>

#define DEFAULT 0
#define FNLAYER   1
#define MEDIALAYER   2

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
  compatible = "nordic,nrf-spim";
  status = "okay";

  pinctrl-0 = <&spi3_default>;
  pinctrl-1 = <&spi3_sleep>;
  pinctrl-names = "default", "sleep";

  led_strip: ws2812@0 {
    compatible = "worldsemi,ws2812-spi";
    label = "WS2812";

    /* SPI */
    reg = <0>; /* ignored, but necessary for SPI bindings */
    spi-max-frequency = <4000000>;

    /* WS2812 */
    chain-length = <10>; /* number of LEDs */
    spi-one-frame = <0x70>;
    spi-zero-frame = <0x40>;
    color-mapping = <LED_COLOR_ID_GREEN
                          LED_COLOR_ID_RED
                          LED_COLOR_ID_BLUE>;
  };
};

/ {
	keymap {
		compatible = "zmk,keymap";
		default_layer {
// ---------------------------------------------------------------------------------------------------------------------------------
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
// | BT_CLR|  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
//                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |
			bindings = <
	&kp DEL   &kp Q &kp W &kp F &kp P &kp B                                                 &kp J &kp L  &kp U  &kp Y   &kp SEMI &kp BSLH
	&bt BT_CLR  &kp A &kp R &kp S &kp T &kp G                                               &kp M &kp N  &kp E  &kp I   &kp O    &kp SQT
	&kp LCTL &kp Z &kp X &kp C &kp D &kp V &kp LSHFT &kp LGUI      	   &kp LSHFT &kp ESC &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LALT &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp BSPC  &kp TAB &kp BSPC &mo MEDIALAYER
			>

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
		};

        fn_layer
        {
			bindings = <
	&kp DEL   &kp Q &kp W &kp F &kp P &kp B                                                 &kp J &kp L  &kp U  &kp Y   &kp SEMI &kp BSLH
	&bt BT_CLR  &kp A &kp R &kp S &kp T &kp G                                               &kp M &kp N  &kp E  &kp I   &kp O    &kp SQT
	&kp LCTL &kp Z &kp X &kp C &kp D &kp V &kp LSHFT &kp LGUI      	   &kp LSHFT &kp ESC &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &kp RCTRL
	                 &kp LALT &kp DEL &kp RET &kp SPACE &kp ESC        &kp RET  &kp BSPC  &kp TAB &kp BSPC &mo MEDIALAYER
			>

        };
    
        media_layer
        {

        };
	};
};